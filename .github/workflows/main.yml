name: macOS Build and Release
'on':
  push:
    branches:
      - master
jobs:
  on-push-main:
    runs-on: macos-latest

    env:
      MACOS_APP_RELEASE_PATH: build/macos/Build/Products/Release

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Enable Macos
        run: flutter config --enable-macos-desktop

      - name: Build macOS app
        run: flutter build macos --release

      # - name: Codesign executable
      #   env:
      #     MACOS_CERTIFICATE: ${{ secrets.CERTIFICATE }}
      #     MACOS_CERTIFICATE_PWD: ${{ secrets.CERTIFICATE_PASSWORD }}
      #     KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      #     IDENTITY: ${{ secrets.IDENTITY }}
      #   run: |
      #     echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
      #     echo "Create Keychain"
      #     security create-keychain -p $KEYCHAIN_PASSWORD build.keychain
      #     echo "Assign to Login Keychain"
      #     security default-keychain -s build.keychain
      #     echo "Unlock the Login Keychain"
      #     security unlock-keychain -p $KEYCHAIN_PASSWORD build.keychain
      #     echo "Import certificate"
      #     security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
      #     echo "Set Key Partition"
      #     security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k $KEYCHAIN_PASSWORD build.keychain
      #     echo "Sign the app"
      #     /usr/bin/codesign --force --deep -s $IDENTITY ./$MACOS_APP_RELEASE_PATH/dev_essentials.app
      - name: Create a dmg
        run: |
          echo "Install create-dmg"
          brew install create-dmg
          cd $MACOS_APP_RELEASE_PATH
          create-dmg \
            --volname "dev_essentials" \
            --window-pos 200 120 \
            --window-size 800 529 \
            --icon-size 130 \
            --text-size 14 \
            --icon "dev_essentials.app" 260 250 \
            --hide-extension "dev_essentials.app" \
            --app-drop-link 540 250 \
            --hdiutil-quiet \
            "dev_essentials.dmg" \
            "dev_essentials.app"

      - name: Create Version Number
        id: versions
        run: |
          APP_VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}')
          echo "::set-output name=version::$(echo $APP_VERSION)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.APP_VERSION }}
          release_name: Release ${{ env.APP_VERSION }}
          body: |
            Release Notes
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ${{ env.MACOS_APP_RELEASE_PATH }}/dev_essentials.dmg # Chemin complet
          asset_name: dev_essentials-${{ env.APP_VERSION }}.dmg # Nom avec la version
          asset_content_type: application/octet-stream 
